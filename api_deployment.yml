apiVersion: v1
kind: Secret
metadata:
  name: api-secret
data:
  apiKey: YTQ1YzUyZmJiNDJmNGY2ODg5MmVhYTIzODU2OTkwMmM=

---

apiVersion: v1
kind: Secret
metadata:
  name: cloud-db-credentials
data:
  username: cGd1c2Vy
  password: dGVzdA==
  dbname: ZmFjZWFwcC1kYg==
  dburi: cG9zdGdyZXM6Ly9wZ3VzZXI6dGVzdEAxMjcuMC4wLjE6NTQzMi9mYWNlYXBwLWRi

---

apiVersion: v1
kind: Service
metadata:
  name: faceapp-api
spec:
  selector:
    app: faceapp-api
  ports: 
  - protocol: TCP
    port: 3000
    targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: faceapp-api

spec:
  selector:
    matchLabels:
      app: faceapp-api
  replicas: 2
  template:
    metadata:
      labels: 
        app: faceapp-api
    spec:
      containers:
      - name: faceapp-api
        image: masterziii/sca-project-backend:latest
        ports:
        - containerPort: 3000
        env:
          - name: CLARIFAI_API
            valueFrom:
              secretKeyRef:
                name: api-secret
                key: apiKey
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: cloud-db-credentials
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloud-db-credentials
                key: password
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: cloud-db-credentials
                key: dbname
          - name: DB_URI
            valueFrom:
              secretKeyRef:
                name: cloud-db-credentials
                key: dburi

      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command: 
          - "/cloud_sql_proxy"
          - "-instances=sca-cloud-school-c2:us-central1:sca-project-db-instance=tcp:5432"
          - "-credential_file=/secrets/credentials.json"
        securityContext: 
          runAsNonRoot: true
        volumeMounts:
        - name: cloudsql-sa-credentials
          mountPath: /secrets/
          readOnly: true
        


      volumes:
      - name: cloudsql-sa-credentials
        secret: 
          secretName: cloudsql-sa-credentials
